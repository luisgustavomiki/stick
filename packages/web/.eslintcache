[{"/home/gus/projects/stick/packages/web/src/index.tsx":"1","/home/gus/projects/stick/packages/web/src/reportWebVitals.ts":"2","/home/gus/projects/stick/packages/web/src/App.tsx":"3","/home/gus/projects/stick/packages/web/src/components/Card.tsx":"4","/home/gus/projects/stick/packages/web/src/components/Board/index.tsx":"5","/home/gus/projects/stick/packages/web/src/components/Board/Board.tsx":"6","/home/gus/projects/stick/packages/web/src/components/Board/BoardItem.tsx":"7"},{"size":500,"mtime":1607376860762,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607376860762,"results":"10","hashOfConfig":"9"},{"size":316,"mtime":1608059680982,"results":"11","hashOfConfig":"9"},{"size":368,"mtime":1608170653226,"results":"12","hashOfConfig":"9"},{"size":51,"mtime":1608059429562,"results":"13","hashOfConfig":"9"},{"size":1273,"mtime":1608170150703,"results":"14","hashOfConfig":"9"},{"size":1119,"mtime":1608170128402,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1esq62c",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/gus/projects/stick/packages/web/src/index.tsx",[],["32","33"],"/home/gus/projects/stick/packages/web/src/reportWebVitals.ts",[],"/home/gus/projects/stick/packages/web/src/App.tsx",[],"/home/gus/projects/stick/packages/web/src/components/Card.tsx",[],"/home/gus/projects/stick/packages/web/src/components/Board/index.tsx",[],"/home/gus/projects/stick/packages/web/src/components/Board/Board.tsx",["34"],"import { Board as BoardEntity } from \"core\"\nimport React, { useState } from \"react\"\nimport { useDrop } from \"react-dnd\"\nimport \"./Board.css\"\nimport BoardItem from \"./BoardItem\"\n\ninterface BoardProps {}\nclass BoardState extends BoardEntity {}\n\nconst Board: React.FC<BoardProps> = ({}) => {\n  const [board, setBoard] = useState<BoardState>(BoardState.getExample())\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.Item,\n    drop: (item: DragItem, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset()\n      const left = Math.round(item.x + delta!.x)\n      const top = Math.round(item.y + delta!.y)\n      moveItem(item.id, left, top)\n      return undefined\n    }\n  })\n\n  const moveItem = (id: number, x: number, y: number) => {\n    const items = board.items\n    items[id].position = { x, y }\n    setBoard({ items })\n  }\n\n  const getItems = () => board.items.map((boardItem, index) => {\n    const {item, position} = boardItem\n    return (\n      <BoardItem id={index} position={position} item={item} />\n    )\n  })\n\n  return (\n    <div className=\"Board\" ref={drop}>\n        {getItems()}\n    </div>\n  )\n}\n\nexport const ItemTypes = {\n  Item: 'item'\n}\n\nexport interface DragItem {\n  type: string\n  id: number\n  x: number\n  y: number\n}\n\nexport default Board;\n","/home/gus/projects/stick/packages/web/src/components/Board/BoardItem.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":10,"column":38,"nodeType":"41","messageId":"42","endLine":10,"endColumn":40},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]